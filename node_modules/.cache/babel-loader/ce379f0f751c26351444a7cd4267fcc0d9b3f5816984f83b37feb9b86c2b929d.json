{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\Work\\\\my-app\\\\src\\\\components\\\\Tasks\\\\TaskList.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList() {\n  _s();\n  const [tasks, setTasks] = useState([{\n    name: \"Learn React\",\n    completed: false\n  }, {\n    name: \"Build a Project\",\n    completed: false\n  }]);\n  const toggleComplete = index => {\n    const updatedTasks = tasks.map((task, i) => i === index ? {\n      ...task,\n      completed: !task.completed\n    } : task);\n    setTasks(updatedTasks);\n  };\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: task.completed ? \"task-complete\" : \"\",\n      children: [task.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => toggleComplete(index),\n        children: task.completed ? \"Undo\" : \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n}\n_s(TaskList, \"0ZITlpkj8N6FR2/gmRgYDviMVt4=\");\n_c = TaskList;\nexport default TaskList;\n\n// import React  from \"react\";\n\n// function TaskList({ tasks  , setTasks}) {\n\n//   const toggleComplete = (index) => {\n//     tasks[index].completed = !tasks[index].completed;\n\n//   };\n\n//   return (\n//     <ul>\n//       {tasks.map((task, index) => (\n//         <li key={index} style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\n//           {task.name}\n//           <button onClick={() => toggleComplete(index)}>\n//             {task.completed ? \"Undo\" : \"Complete\"}\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TaskList","_s","tasks","setTasks","name","completed","toggleComplete","index","updatedTasks","map","task","i","children","className","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/Work/my-app/src/components/Tasks/TaskList.js"],"sourcesContent":["import React, { useState } from \"react\";\r\n\r\nfunction TaskList() {\r\n  const [tasks, setTasks] = useState([\r\n    { name: \"Learn React\", completed: false },\r\n    { name: \"Build a Project\", completed: false },\r\n  ]);\r\n\r\n  const toggleComplete = (index) => {\r\n    const updatedTasks = tasks.map((task, i) =>\r\n      i === index ? { ...task, completed: !task.completed } : task\r\n    );\r\n    setTasks(updatedTasks);\r\n  };\r\n\r\n  return (\r\n    <ul>\r\n      {tasks.map((task, index) => (\r\n        <li\r\n          key={index}\r\n          className={task.completed ? \"task-complete\" : \"\"}\r\n        >\r\n          {task.name}\r\n          <button onClick={() => toggleComplete(index)}>\r\n            {task.completed ? \"Undo\" : \"Complete\"}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n\r\n// import React  from \"react\";\r\n\r\n// function TaskList({ tasks  , setTasks}) {\r\n \r\n//   const toggleComplete = (index) => {\r\n//     tasks[index].completed = !tasks[index].completed;\r\n   \r\n//   };\r\n\r\n//   return (\r\n//     <ul>\r\n//       {tasks.map((task, index) => (\r\n//         <li key={index} style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\r\n//           {task.name}\r\n//           <button onClick={() => toggleComplete(index)}>\r\n//             {task.completed ? \"Undo\" : \"Complete\"}\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\n// export default TaskList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CACjC;IAAEO,IAAI,EAAE,aAAa;IAAEC,SAAS,EAAE;EAAM,CAAC,EACzC;IAAED,IAAI,EAAE,iBAAiB;IAAEC,SAAS,EAAE;EAAM,CAAC,CAC9C,CAAC;EAEF,MAAMC,cAAc,GAAIC,KAAK,IAAK;IAChC,MAAMC,YAAY,GAAGN,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEC,CAAC,KACrCA,CAAC,KAAKJ,KAAK,GAAG;MAAE,GAAGG,IAAI;MAAEL,SAAS,EAAE,CAACK,IAAI,CAACL;IAAU,CAAC,GAAGK,IAC1D,CAAC;IACDP,QAAQ,CAACK,YAAY,CAAC;EACxB,CAAC;EAED,oBACET,OAAA;IAAAa,QAAA,EACGV,KAAK,CAACO,GAAG,CAAC,CAACC,IAAI,EAAEH,KAAK,kBACrBR,OAAA;MAEEc,SAAS,EAAEH,IAAI,CAACL,SAAS,GAAG,eAAe,GAAG,EAAG;MAAAO,QAAA,GAEhDF,IAAI,CAACN,IAAI,eACVL,OAAA;QAAQe,OAAO,EAAEA,CAAA,KAAMR,cAAc,CAACC,KAAK,CAAE;QAAAK,QAAA,EAC1CF,IAAI,CAACL,SAAS,GAAG,MAAM,GAAG;MAAU;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GANJX,KAAK;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAOR,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACjB,EAAA,CA5BQD,QAAQ;AAAAmB,EAAA,GAARnB,QAAQ;AA8BjB,eAAeA,QAAQ;;AAEvB;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}