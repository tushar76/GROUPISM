{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\OneDrive\\\\Desktop\\\\Work\\\\my-app\\\\src\\\\components\\\\Tasks\\\\TaskList.js\";\nimport React from \"react\";\nimport \"../../styles/EnhancedApp.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TaskList({\n  tasks,\n  onToggleComplete\n}) {\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    children: tasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      className: task.completed ? \"task-complete\" : \"\",\n      children: [task.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => onToggleComplete(index),\n        children: task.completed ? \"Undo\" : \"Complete\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskList;\nexport default TaskList;\n\n// import React, { useState } from \"react\";\n\n// function TaskList() {\n//   const [tasks, setTasks] = useState([\n//     { name: \"Learn React\", completed: false },\n//     { name: \"Build a Project\", completed: false },\n//   ]);\n\n//   const toggleComplete = (index) => {\n//     const updatedTasks = tasks.map((task, i) =>\n//       i === index ? { ...task, completed: !task.completed } : task\n//     );\n//     setTasks(updatedTasks);\n//   };\n\n//   return (\n//     <ul>\n//       {tasks.map((task, index) => (\n//         <li\n//           key={index}\n//           className={task.completed ? \"task-complete\" : \"\"}\n//         >\n//           {task.name}\n//           <button onClick={() => toggleComplete(index)}>\n//             {task.completed ? \"Undo\" : \"Complete\"}\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default TaskList;\n\n// import React  from \"react\";\n\n// function TaskList({ tasks  , setTasks}) {\n\n//   const toggleComplete = (index) => {\n//     tasks[index].completed = !tasks[index].completed;\n\n//   };\n\n//   return (\n//     <ul>\n//       {tasks.map((task, index) => (\n//         <li key={index} style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\n//           {task.name}\n//           <button onClick={() => toggleComplete(index)}>\n//             {task.completed ? \"Undo\" : \"Complete\"}\n//           </button>\n//         </li>\n//       ))}\n//     </ul>\n//   );\n// }\n\n// export default TaskList;\nvar _c;\n$RefreshReg$(_c, \"TaskList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","TaskList","tasks","onToggleComplete","children","map","task","index","className","completed","name","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/OneDrive/Desktop/Work/my-app/src/components/Tasks/TaskList.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../../styles/EnhancedApp.css\";\r\n\r\nfunction TaskList({ tasks, onToggleComplete }) {\r\n  return (\r\n    <ul>\r\n      {tasks.map((task, index) => (\r\n        <li key={index} className={task.completed ? \"task-complete\" : \"\"}>\r\n          {task.name}\r\n          <button onClick={() => onToggleComplete(index)}>\r\n            {task.completed ? \"Undo\" : \"Complete\"}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nexport default TaskList;\r\n\r\n// import React, { useState } from \"react\";\r\n\r\n// function TaskList() {\r\n//   const [tasks, setTasks] = useState([\r\n//     { name: \"Learn React\", completed: false },\r\n//     { name: \"Build a Project\", completed: false },\r\n//   ]);\r\n\r\n//   const toggleComplete = (index) => {\r\n//     const updatedTasks = tasks.map((task, i) =>\r\n//       i === index ? { ...task, completed: !task.completed } : task\r\n//     );\r\n//     setTasks(updatedTasks);\r\n//   };\r\n\r\n//   return (\r\n//     <ul>\r\n//       {tasks.map((task, index) => (\r\n//         <li\r\n//           key={index}\r\n//           className={task.completed ? \"task-complete\" : \"\"}\r\n//         >\r\n//           {task.name}\r\n//           <button onClick={() => toggleComplete(index)}>\r\n//             {task.completed ? \"Undo\" : \"Complete\"}\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\n// export default TaskList;\r\n\r\n// import React  from \"react\";\r\n\r\n// function TaskList({ tasks  , setTasks}) {\r\n \r\n//   const toggleComplete = (index) => {\r\n//     tasks[index].completed = !tasks[index].completed;\r\n   \r\n//   };\r\n\r\n//   return (\r\n//     <ul>\r\n//       {tasks.map((task, index) => (\r\n//         <li key={index} style={{ textDecoration: task.completed ? \"line-through\" : \"none\" }}>\r\n//           {task.name}\r\n//           <button onClick={() => toggleComplete(index)}>\r\n//             {task.completed ? \"Undo\" : \"Complete\"}\r\n//           </button>\r\n//         </li>\r\n//       ))}\r\n//     </ul>\r\n//   );\r\n// }\r\n\r\n// export default TaskList;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAiB,CAAC,EAAE;EAC7C,oBACEH,OAAA;IAAAI,QAAA,EACGF,KAAK,CAACG,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBP,OAAA;MAAgBQ,SAAS,EAAEF,IAAI,CAACG,SAAS,GAAG,eAAe,GAAG,EAAG;MAAAL,QAAA,GAC9DE,IAAI,CAACI,IAAI,eACVV,OAAA;QAAQW,OAAO,EAAEA,CAAA,KAAMR,gBAAgB,CAACI,KAAK,CAAE;QAAAH,QAAA,EAC5CE,IAAI,CAACG,SAAS,GAAG,MAAM,GAAG;MAAU;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC;IAAA,GAJFR,KAAK;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAKV,CACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET;AAACC,EAAA,GAbQf,QAAQ;AAejB,eAAeA,QAAQ;;AAEvB;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}